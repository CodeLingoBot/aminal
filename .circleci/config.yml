# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      # specify the version
      - image: liamg/golang-opengl
    working_directory: /go/src/github.com/liamg/aminal
    steps:
      - checkout
      - run: make test
  build-linux:
    docker:
      # specify the version
      - image: liamg/golang-opengl
    working_directory: /go/src/github.com/liamg/aminal
    requires:
      - build
    steps:
      - checkout
      - run: make build-linux
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - bin
  build-darwin:
    docker:
      # specify the version
      - image: karalabe/xgo-latest:latest
    working_directory: /go/src/github.com/liamg/aminal
    steps:
      - checkout
      - run: make build-darwin
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - bin
  release:
    docker:
      - image: circleci/golang:latest
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./workspace/bin/
workflows:
  version: 2
  build:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build-darwin:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - build-linux:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build-linux
            - build-darwin
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/